# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the action will run. 
on:
  # Build at 00:00 on every 3rd day-of-month.
  schedule:
    - cron: "0 0 */3 * *"
  # Triggers the workflow on push or pull request events but only for the master branch
  push:
    branches: [ test ]
  pull_request:
    branches: [ test ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "cnctsun"
  cnctsun:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2

      # Runs a set of commands using the runners shell
      - name: Run a multi-line script
        run: |
          set -ex
          bash deploy.sh stable
          # mkdir dist
          # mv cnctsun*.AppImage* dist/.
          # cd dist
          # chmod +x *.AppImage
          # cd ..

      - name: Upload artifact
        uses: actions/upload-artifact@v1.0.0
        with:
          name: cnctsun-continuous-x86_64.AppImage
          path: 'dist'

  # This workflow contains a single job called "cnctsun-wp"
  cnctsun-wp:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2

      # Runs a set of commands using the runners shell
      - name: Run a multi-line script
        uses: GabrielBB/xvfb-action@v1
        with:
          run: sudo apt install xinit -y &>/dev/null && sudo apt install xserver-xorg-core --no-install-recommends --no-install-suggests -y &>/dev/null && touch ~/.Xauthority && xauth generate :99 . trusted && xauth add ${HOST}:99 . $(xxd -l 16 -p /dev/urandom) && nohup startx bash deploy.sh stablewp -- :99
          # run: |
          # set -ex
          # export DISPLAY=':99.0'
          # sudo Xvfb :99 -screen 0 1024x768x24 >/dev/null 2>&1 & XPID=$!
          # sudo apt install xinit -y &>/dev/null
          # sudo apt install xserver-xorg-core --no-install-recommends --no-install-suggests -y &>/dev/null
          # xauth with complain unless ~/.Xauthority exists
          # touch ~/.Xauthority ; sudo touch /root/.Xauthority
          # only this one key is needed for X11 over SSH 
          # sudo xauth generate :99 . trusted 
          # generate our own key, xauth requires 128 bit hex encoding
          # sudo xauth add ${HOST}:99 . $(xxd -l 16 -p /dev/urandom)
          # sudo nohup startx bash deploy.sh stablewp -- :99 
          # bash deploy.sh stablewp
          # mkdir dist
          # mv cnctsun*.AppImage* dist/.
          # cd dist
          # chmod +x *.AppImage
          # cd ..

      - name: Upload artifact
        uses: actions/upload-artifact@v1.0.0
        with:
          name: cnctsun-continuous-wp-x86_64.AppImage
          path: 'dist'

  release-stable:
    needs: [cnctsun]
    runs-on: ubuntu-latest

    steps:
      - uses: actions/download-artifact@v1
        with:
          name: cnctsun-continuous-x86_64.AppImage

      - name: Release
        uses: marvinpinto/action-automatic-releases@latest
        with:
          title: cnctsun stable
          automatic_release_tag: stable
          prerelease: false
          draft: false
          files: |
            cnctsun-continuous-x86_64.AppImage
          repo_token: ${{ secrets.GITHUB_TOKEN }}

  release-stable-wp:
    needs: [cnctsun-wp]
    runs-on: ubuntu-latest

    steps:
      - uses: actions/download-artifact@v1
        with:
          name: cnctsun-continuous-wp-x86_64.AppImage

      - name: Release
        uses: marvinpinto/action-automatic-releases@latest
        with:
          title: cnctsun stable with wineprefix
          automatic_release_tag: stable-wp
          prerelease: false
          draft: false
          files: |
            cnctsun-continuous-wp-x86_64.AppImage
          repo_token: ${{ secrets.GITHUB_TOKEN }}
